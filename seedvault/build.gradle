/*
 * Copyright (c) 2022 Solana Mobile Inc.
 */

plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    namespace = 'com.solanamobile.seedvault'

    compileSdk 32

    defaultConfig {
        // Note: 'minSdk 1' ensures that the library can be used with apps targeting any Android
        // version. It's only useful on devices which expose the Seed Vault API.
        minSdk 1
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    publishing {
        multipleVariants {
            allVariants()
            withSourcesJar()
            withJavadocJar()
        }
    }
}

publishing {
    publications {
        allVariants(MavenPublication) {
            groupId = 'com.solanamobile'
            artifactId = 'seedvault-wallet-sdk'
            version = releaseVersion // see gradle.properties

            afterEvaluate {
                from components.default
            }
        }
    }
    // TODO: publish to Maven Central
    repositories {
        maven {
            name = 'local_repo'
            url = "${project.buildDir}/repo"
        }
    }
}

// Define JavaDoc build task for all variants
android.libraryVariants.all { variant ->
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompileProvider.get().source
        classpath = project.files(android.getBootClasspath().join(File.pathSeparator))
        classpath += files(variant.javaCompileProvider.get().classpath)
        options.links("https://docs.oracle.com/javase/8/docs/api/");
        options.links("https://d.android.com/reference/");
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }
}

// Build JavaDoc when making a release build
tasks.whenTaskAdded { task ->
    if (task.name == 'assembleRelease') {
        task.dependsOn("generateReleaseJavadoc")
    }
}

dependencies {
    implementation 'androidx.annotation:annotation:1.3.0'
}